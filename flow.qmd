---
title: "一連の流れ"
jupyter: python3
---

ここでは、QGIS Plugin を作成する全体の流れを説明します。

## 必須

QGIS には、プラグイン開発に必要なスクリプト等が全て含まれていますが、なぜかそのままでは使えない形式になっています。

また、GUI などのフレームワークには PyQt を使っています。似たようなものに PySide がありますが、

| アプリ | macOS | Win | OSGeo4W |
| ------ | ---- | ---- | ------- |
| QGIS plugin | /Users/username/Library/Application\ Support/QGIS/QGIS3/profiles/default/python/plugins  | 右に同じ | C:\\Users\\username\\AppData\\Roaming\\QGIS\\QGIS3\\profiles\\default\\python\plugins |
| python | /Applications/QGIS-LTR.app/Contents/MacOS/bin/python3 | C:\\Program Files\\apps\\Python39\\python3.exe | C:\\OSGeo4W\\apps\\Python312\\python3.exe |
| pyrcc |  /Applications/QGIS-LTR.app/Contents/MacOS/bin/pyrcc5 | C:\\Program Files\\apps\\Python312\\Scripts\\pyrcc5.exe | C:\\OSGeo4W\\apps\\Python39\\Scripts\\pyrcc5.exe |
| Designer | /Applications/QGIS-LTR.app/Contents/MacOS/Designer.app | C:\\Program Files\\apps\\Python312\\Scripts\\pylupdate5.exe | C:\\OSGeo4W\\apps\\Python39\\Scripts\\pylupdate5.exe |
| Linguist | /Applications/QGIS-LTR.app/Contents/Resources/python/site-packages/qt5_applications/Qt/bin/Linguist.app | C:\\Program Files\\apps\\Qt5\\bin\\linguist.exe | C:\\OSGeo4W\\apps\\Qt5\\bin\\linguist.exe  |

### バージョンについて

macOS でも Windows でも、複数のバージョンの QGISをインストールすることが可能です。

この場合、注意点があります。

QGIS バージョンごとに、Python もインストールされます。

追加 Python モジュール等も、QGIS バージョンごとにバラバラに追加されます。

QGIS プラグインは、複数のバージョンの QGIS が共通して同じソースを読み込みます。

### macOS

pyrcc と pylupdate は、一行目を書き換える必要があります。

QGIS のバージョンによって、両者のファイルの中身が少し異なりますが、どちらもテキストファイルです。

`/Applications/QGIS-LTR.app/Contents/MacOS/bin/pyrcc5` が、以下のような場合

```
#!/Applications/QGIS-LTR.app/Contents/MacOS/QGIS
# -*- coding: utf-8 -*-
import re
import sys
from PyQt5.pyrcc_main import main
if __name__ == '__main__':
    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])
    sys.exit(main())
```

第一行目を

`#!/Applications/QGIS-LTR.app/Contents/MacOS/bin/python3`

と書き換えます。

上記のようではなく、`/Applications/QGIS-LTR.app/Contents/MacOS/bin/pyrcc5` が

```
#!/bin/sh
exec '`dirname $0`/python3.9' -m PyQt5.pyrcc_main ${1+"$@"}
```

であれば、

```
#!/bin/sh
exec '/Applications/QGIS-LTR.app/Contents/MacOS/bin/python3.9' -m PyQt5.pyrcc_main ${1+"$@"}
```

`/Applications/QGIS-LTR.app/Contents/MacOS/bin/pylupdate5` は

```
#!/Applications/QGIS-LTR.app/Contents/MacOS/QGIS
# -*- coding: utf-8 -*-
import re
import sys
from PyQt5.pylupdate_main import main
if __name__ == '__main__':
    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])
    sys.exit(main())
```

または

```
#!/bin/sh
exec '/Applications/QGIS-LTR.app/Contents/MacOS/bin/python3.9' -m PyQt5.pylupdate_main ${1+"$@"}
```

と書き換えます。


### Windows {#sec-win}

Windows では、pyrcc と pylupdate を使う直前に qt5 や python3 の環境を読み込ませることで解決できます。

スタンドアロン版の場合

```
> call C:\Program Files\QGIS 3.38.2\bin\o4w_env.bat
> C:\Program Files\QGIS 3.38.2\apps\Python312\Scripts\pyrcc5.exe -o resources.py resources.qrc
```

OSGeo4W 版の場合

```
> call C:\OSGeo4W\bin\o4w_env.bat
> C:\OSGeo4W\apps\Python39\Scripts\pyrcc5.exe -o resources.py resources.qrc
```

なお、PowerShell の場合、call を無くします。

```
PS C:\Users\username> C:\OSGeo4W\bin\o4w_env.bat
PS C:\Users\username> C:\OSGeo4W\apps\Python39\Scripts\pyrcc5.exe -o resources.py resources.qrc
```

linguist.exe と designer.exe は、そのままでは実行できません。C:\\OSGeo4W\\saga_gui.bat などを参考に、以下のファイルを作成します。

1. C:\\OSGeo4W\\saga_gui.bat をコピーする
2. C:\\OSGeo4W\\linguist_gui.bat という名前にする
3. メモ帳で開き、二行目の ¥apps¥saga¥saga_gui.exe を ¥Qt5¥bin¥linguist.exe と書き換える

同様の作業を designer についても行います。

これで、C:\\OSGeo4W\\linguist_gui.bat をダブルクリックすると Designer が立ち上がるようになります。

## 流れ

* 課題の発見: まずは、QGIS や各種 Plugin を試してみることです。その中で、課題を発見していきます。
* 設計: どのような機能を実装したいか、どのような UI にしたいかを設計します。前半は紙に自由に書くと良いでしょう。とくに、Plugin では、UI として３つの方法が主流です。
  * ウィンドウ
  * ドック
  * プロセシング
* 雛形作成: Plugin Builder を使って、名称などを含んだ雛形を作ります
* resouces.py の作成: pyrcc を使います
* GitHub 登録: 必須ではありませんが、GitHub で公開することができます
* GitHub の DOI 登録
* コード記述
* GitHub にコミット
* 多言語化

## 雛形作成

QGIS のプラグイン Plugin Builder 3 を使用します。

バージョンのところでは、`0.0.1` という表記ができません。`0.1` などにして、すぐに metadata.txt を書き換えることで対応できます。

保存先は、以下の QGIS plugin 保存先にしておくと、QGIS を立ち上げた際に読み込まれます。ただし、次の節で見るように、`resouces.py` が作成されていないとプラグインとして認識されません。

macOS: /Users/username/Library/Application\ Support/QGIS/QGIS3/profiles/default/python/plugins

Windows: C:\\Users\\username\\AppData\\Roaming\\QGIS\\QGIS3\\profiles\\default\\python\plugins

## resouces.py の作成

MyPlugin 内に、`resouces.py` ファイルが作成されないことがあります。これがないと、プラグインとして認識されません。(Windows で `o4w_env.bat` を読み込んだ後などだと、パスが通っているので `resouces.py` まで作成してくれます。)

`resources.qrc` があることを確認します。

macOS の場合

```
/Applications/QGIS-LTR.app/Contents/MacOS/bin/pyrcc5 -o resources.py resources.qrc
```

Windows スタンドアロン版の場合

```
> call C:\Program Files\QGIS 3.38.2\bin\o4w_env.bat
> C:\Program Files\apps\Python312\Scripts\pyrcc5.exe -o resources.py resources.qrc
```

OSGeo4W 版の場合

```
> call C:\OSGeo4W\bin\o4w_env.bat
> C:\OSGeo4W\apps\Python39\Scripts\pyrcc5.exe -o resources.py resources.qrc
```

なお、PowerShell の場合、call をなしで実行します。

```
PS > C:\OSGeo4W\bin\o4w_env.bat
PS > C:\OSGeo4W\apps\Python39\Scripts\pyrcc5.exe -o resources.py resources.qrc
```

これで QGIS Plugin としては完成です。

QGIS を立ち上げて、プラグイン &gt; プラグインの管理とインストール から確認してみましょう。

